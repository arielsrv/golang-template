# yaml-language-server: $schema=https://json.schemastore.org/taskfile.json
version: '3'

env:
  OUTPUT_FOLDER: build
  EXECUTABLE: app
  COVERAGE_FOLDER: coverage

tasks:
  lint:
    desc: Use golangci-lint (.golangci.yml).
    cmds:
      - golangci-lint run
  test:
    desc: Run test.
    cmds:
      - go test ./...
  coverage:
    desc: Makes report coverage.
    cmds:
      - mkdir -p $COVERAGE_FOLDER
      - go test -v ./... -covermode=count -coverpkg=./... -coverprofile coverage/coverage.out
      - go tool cover -html coverage/coverage.out -o coverage/coverage.html
      - go tool cover -func=coverage/coverage.out
  clean:
    desc: Clean binaries and reports.
    cmds:
      - rm -rf build
      - rm -rf coverage
  download:
    desc: Run go mod tidy.
    cmds:
      - go mod tidy
  upgrade:
    desc: Check for latest direct dependencies.
    cmds:
      - go-mod-upgrade
  swagger:
    desc: Generate RESTful API documentation with Swagger.
    dir: cmd
    cmds:
      - swag init -d ./,../internal/infrastructure/handlers
  build:
    desc: Build the go binary.
    generates:
      - app
    interactive: true
    cmds:
      - mkdir -p $OUTPUT_FOLDER
      - go build -v cmd/main.go
      - mv main $OUTPUT_FOLDER/$EXECUTABLE
  all:
    desc: Run relevant tasks.
    cmds:
      - task: clean
      - task: download
      - task: lint
      - task: test
      - task: coverage
      - task: swagger
      - task: build
  default:
    desc: Run [build] task.
    cmds:
      - task: build
  run:
    desc: Run main.go.
    cmds:
      - echo '{{OS}}'
      - ./$OUTPUT_FOLDER/$EXECUTABLE